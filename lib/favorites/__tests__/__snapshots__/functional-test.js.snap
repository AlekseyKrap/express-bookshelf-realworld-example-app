// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`favorites DELETE /api/articles/:slug/favorite with a logged in user and an invalid slug should return a 404 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Not Found",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Not Found",
            "message": "Not Found",
            "statusCode": 404,
          },
          "statusCode": 404,
        },
      },
      "message": "Not Found",
    },
  },
  "status": 404,
}
`;

exports[`favorites DELETE /api/articles/:slug/favorite without a logged in user should return a 401 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Unauthorized",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Unauthorized",
            "message": "Unauthorized",
            "statusCode": 401,
          },
          "statusCode": 401,
        },
      },
      "message": "Unauthorized",
    },
  },
  "status": 401,
}
`;

exports[`favorites POST /api/articles/:slug/favorite with a logged in user and an invalid slug should return a 404 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Not Found",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Not Found",
            "message": "Not Found",
            "statusCode": 404,
          },
          "statusCode": 404,
        },
      },
      "message": "Not Found",
    },
  },
  "status": 404,
}
`;

exports[`favorites POST /api/articles/:slug/favorite without a logged in user should return a 401 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Unauthorized",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Unauthorized",
            "message": "Unauthorized",
            "statusCode": 401,
          },
          "statusCode": 401,
        },
      },
      "message": "Unauthorized",
    },
  },
  "status": 401,
}
`;
